/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Hello, HelloInterface } from "../Hello";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_message",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "MessageEvent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "message",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct Hello.EventStruct",
        name: "eventStruct",
        type: "tuple",
      },
    ],
    name: "StructEvent",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_message",
        type: "string",
      },
    ],
    name: "message",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620009d0380380620009d083398181016040528101906200003791906200034d565b6200004d816200006560201b620000d11760201c565b6200005e816200010860201b60201c565b50620004f1565b62000105816040516024016200007c9190620003fb565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506200019160201b60201c565b50565b7f7ba22a0cbd3226111d8a61812ff4cd1934aace2147b8c59de1ecc9975f7af21881604051620001399190620003fb565b60405180910390a17f159fec0bb2fd4779a18791ece9f4644d57aebf190b6aef145eb075ba448ec4e6604051806040016040528083815260200142815250604051620001869190620004cd565b60405180910390a150565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200022382620001d8565b810181811067ffffffffffffffff82111715620002455762000244620001e9565b5b80604052505050565b60006200025a620001ba565b905062000268828262000218565b919050565b600067ffffffffffffffff8211156200028b576200028a620001e9565b5b6200029682620001d8565b9050602081019050919050565b60005b83811015620002c3578082015181840152602081019050620002a6565b60008484015250505050565b6000620002e6620002e0846200026d565b6200024e565b905082815260208101848484011115620003055762000304620001d3565b5b62000312848285620002a3565b509392505050565b600082601f830112620003325762000331620001ce565b5b815162000344848260208601620002cf565b91505092915050565b600060208284031215620003665762000365620001c4565b5b600082015167ffffffffffffffff811115620003875762000386620001c9565b5b62000395848285016200031a565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000620003c7826200039e565b620003d38185620003a9565b9350620003e5818560208601620002a3565b620003f081620001d8565b840191505092915050565b60006020820190508181036000830152620004178184620003ba565b905092915050565b600082825260208201905092915050565b60006200043d826200039e565b6200044981856200041f565b93506200045b818560208601620002a3565b6200046681620001d8565b840191505092915050565b6000819050919050565b620004868162000471565b82525050565b60006040830160008301518482036000860152620004ab828262000430565b9150506020830151620004c260208601826200047b565b508091505092915050565b60006020820190508181036000830152620004e981846200048c565b905092915050565b6104cf80620005016000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806305c766d114610030575b600080fd5b61004a600480360381019061004591906102ed565b61004c565b005b7f7ba22a0cbd3226111d8a61812ff4cd1934aace2147b8c59de1ecc9975f7af2188160405161007b91906103b5565b60405180910390a17f159fec0bb2fd4779a18791ece9f4644d57aebf190b6aef145eb075ba448ec4e66040518060400160405280838152602001428152506040516100c69190610477565b60405180910390a150565b610167816040516024016100e591906103b5565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061016a565b50565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6101fa826101b1565b810181811067ffffffffffffffff82111715610219576102186101c2565b5b80604052505050565b600061022c610193565b905061023882826101f1565b919050565b600067ffffffffffffffff821115610258576102576101c2565b5b610261826101b1565b9050602081019050919050565b82818337600083830152505050565b600061029061028b8461023d565b610222565b9050828152602081018484840111156102ac576102ab6101ac565b5b6102b784828561026e565b509392505050565b600082601f8301126102d4576102d36101a7565b5b81356102e484826020860161027d565b91505092915050565b6000602082840312156103035761030261019d565b5b600082013567ffffffffffffffff811115610321576103206101a2565b5b61032d848285016102bf565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610370578082015181840152602081019050610355565b60008484015250505050565b600061038782610336565b6103918185610341565b93506103a1818560208601610352565b6103aa816101b1565b840191505092915050565b600060208201905081810360008301526103cf818461037c565b905092915050565b600082825260208201905092915050565b60006103f382610336565b6103fd81856103d7565b935061040d818560208601610352565b610416816101b1565b840191505092915050565b6000819050919050565b61043481610421565b82525050565b6000604083016000830151848203600086015261045782826103e8565b915050602083015161046c602086018261042b565b508091505092915050565b60006020820190508181036000830152610491818461043a565b90509291505056fea2646970667358221220ef9c8d63a843b6394c97424b7abeaea69bcbf21983310f72845b81657917d0d564736f6c63430008120033";

type HelloConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HelloConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Hello__factory extends ContractFactory {
  constructor(...args: HelloConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _message: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Hello> {
    return super.deploy(_message, overrides || {}) as Promise<Hello>;
  }
  override getDeployTransaction(
    _message: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_message, overrides || {});
  }
  override attach(address: string): Hello {
    return super.attach(address) as Hello;
  }
  override connect(signer: Signer): Hello__factory {
    return super.connect(signer) as Hello__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HelloInterface {
    return new utils.Interface(_abi) as HelloInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Hello {
    return new Contract(address, _abi, signerOrProvider) as Hello;
  }
}
